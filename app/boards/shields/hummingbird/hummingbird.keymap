/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEF_L 0
#define QWE_L 1
#define NAV_L 2
#define VAL_L 3
#define NUM_L 4
#define SYM_L 5
#define HIDDEN_L 6

/*
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <7>;
        rows = <6>;
        map = <
    RC(0,0) RC(1,0) RC(0,1) RC(1,1) RC(0,2) RC(1,2) RC(0,3) RC(1,3) RC(0,4) RC(1,4)
    RC(2,0) RC(3,0) RC(2,1) RC(3,1) RC(2,2) RC(3,2) RC(2,3) RC(3,3) RC(2,4) RC(3,4)
            RC(4,0) RC(5,0) RC(4,1)                 RC(5,2) RC(4,3) RC(5,3)
                          RC(5,1) RC(4,2)       RC(5,4) RC(4,4)
        >;
    };

*/
// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <150>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <220>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <2 3>;
            then-layer = <5>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_hidden {
            timeout-ms = <50>;
            key-positions = <0 10>;
            bindings = <&mo HIDDEN_L>;
        };
        combo_quo {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp QUOT>;
        };
        combo_z {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp V>;
        };
        combo_b {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp B>;
        };
        combo_y {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp K>;
        };

        combo_slash {
            layers = <0>;
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp DOT>;
        };

        combo_z_qwer {
            layers = <1>;
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp Z>;
        };
        combo_b_qwer {
            layers = <1>;
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp B>;
        };
        combo_y_qwer {
            layers = <1>;
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp Y>;
        };

        combo_slash_qwer {
            layers = <1>;
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp SLASH>;
        };
    };


        // default_layer {
        //     bindings = <
        //         &kp 0      &kp 1      &kp 2       &kp 3           &kp 4        &kp 5            &kp 6          &kp 7       &kp 8      &kp 9
        //         &hm 10     &hm 11     &hm 12      &hm 13          &kp 14       &kp 15           &hm 16         &hm 18      &hm 19 &hm RGUI O
        //                    &kp Z      &kp X       &kp C                                         &kp K          &kp M  &kp COMMA
        //                                           &lt NAV_L TAB  &kp RET       &lt NUM_L SPACE  &lt SYM_L BKSP
        //     >;
        // };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "colemak";
            bindings = <
                &kp Q       &kp W       &kp F       &kp P     &kp G        &kp J            &kp L    &kp U       &kp Y          &kp SEMI
                &hm LSHFT A &hm LCTRL R &hm LGUI S  &kp T     &kp D        &kp H            &kp N    &hm LGUI E  &hm RCTRL I    &hm LSHFT O
                            &kp Z       &kp X       &kp C                                   &kp M    &kp COMMA   &kp DOT
                                                  &lt VAL_L TAB  &lt NAV_L RET &lt NUM_L SPACE  &kp BKSP
            >;
        };

        qwerty_layer {
            label = "qwerty";
            bindings = <
                &kp Q      &kp W      &kp E       &kp R           &kp T        &kp H            &kp U          &kp I       &kp O      &kp P
                &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F     &kp G        &kp N            &hm RSHFT J    &hm RCTRL K &hm LALT L &hm RGUI QUOT
                           &kp X      &kp C       &kp V                                         &kp M          &kp COMMA  &kp DOT
                                                  &lt VAL_L TAB  &lt NAV_L RET &lt NUM_L SPACE  &lt SYM_L BKSP
            >;
        };


        nav_layer {
            label = "Nav";
            bindings = <
                &kp ESC     &trans     &trans      &trans          &trans       &trans           &kp HOME       &kp UARW  &kp PG_UP  &kp QUOT
                &kp BSLH    &trans     &trans      &kp LBKT        &kp RBKT     &kp LARW         &kp DARW       &kp UARW  &kp RARW   &kp QUOT
                           &trans     &trans      &trans                                        &kp MINUS      &kp EQUAL &kp SLASH
                                                  &trans          &trans       &kp TAB          &kp DEL
            >;
        };  
        naval_layer {
            label = "Naval";
            bindings = <
                &to QWE_L     &kp A      &trans      &trans          &trans       &trans         &kp C_BRI_DEC &kp C_BRI_INC &kp PG_UP  &trans
                &to DEF_L     &trans     &trans      &kp LPAR        &kp RPAR     &kp K_MUTE     &kp K_VOL_DN  &kp K_VOL_UP  &kp RARW   &trans
                              &trans     &trans      &trans                                      &kp PLUS      &kp EQUAL     &kp SLASH
                                                  &trans          &trans       &kp ESC          &kp DEL
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &kp LBKT   &kp N7     &kp N8      &kp N9          &kp RBKT      &trans          &kp N7        &kp N8     &kp N9    &trans
                &kp SEMI   &kp N4     &kp N5      &kp N6          &kp EQUAL     &trans          &kp N4        &kp N5     &kp N6    &trans
                           &kp N1     &kp N2      &kp N3                                        &kp N1        &kp N2     &kp N3
                                                  &kp N0          &kp MINUS     &trans          &kp N0
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp F1   &kp F2 &kp F3  &kp F4      &kp F5      &trans          &trans         &trans      &reset     &bootloader
                &kp F6  &kp F7 &kp F8  &kp F9      &kp F10      &trans          &trans         &trans      &trans     &bootloader
                           &kp F11 &kp F12  &kp F13                                    &trans         &trans      &trans
                                                  &kp LS(N0)      &kp UNDER     &kp TAB          &trans
            >;
        };
        hidden_layer {
            label = "Hidden Mods";
            bindings = <
                &trans   &kp LS(N1) &kp LS(N2)  &kp LS(N3)      &kp LS(N4)      &kp LS(N5) &kp LS(N6)  &kp LS(N7) &kp LS(N8)     &kp LS(QUOT)
                &trans   &kp LS(N5) &kp LS(N6)  &kp LS(N7)      &kp LS(N8)      &trans     &trans      &trans     &kp LS(SEMI)   &kp LS(SEMI)
                           &kp F11 &kp F12  &kp F13                                    &trans         &trans      &trans
                                                  &trans      &trans     &trans          &trans
            >;
        };
    };
};

